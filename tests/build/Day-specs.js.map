{"version":3,"names":[],"mappings":"","sources":["Day-specs.js"],"sourcesContent":["/* eslint-env jasmine */\n/* globals moment */\n\nimport Day from '../../src/Day';\n\ndescribe('A Day class\\'s instance should', () => {\n  let day;\n  const dayHeaderFormat = 'DD/MM/YYYY';\n  beforeAll(() => {\n    const date = new Date();\n    const parentClass = 'super-class';\n    const config = {\n      dayHeaderFormat,\n    };\n    const callbacks = {};\n    day = new Day(date, parentClass, config, callbacks);\n  });\n  // ===================\n  // Presentation\n  // ===================\n  describe('create day element with', () => {\n    it('date title', () => {\n      expect(day.html.header).toBeDefined();\n      expect(day.html.container.querySelector('[class*=header]')).toBeDefined();\n    });\n    it('events space', () => {\n      expect(day.html.events).toBeDefined();\n      expect(day.html.container.querySelector('[class*=events]')).toBeDefined();\n    });\n  });\n\n  it('highlight the html element if it refers to the current day.', () => {\n    expect(day.html.events).toBeDefined();\n  });\n  it('show the specified date', () => {\n    day.setDate(new Date());\n    const diff = Math.abs(moment(day.html.header).diff(new Date(), 'days'));\n    expect(diff).toEqual(0);\n  });\n  it('show the date in the correct format', () => {\n    day.setDate(new Date());\n    const dayHeader = day.html.header.innerHTML;\n    const dateInCorrectFormat = moment().format(dayHeaderFormat);\n    expect(dayHeader).toEqual(dateInCorrectFormat);\n  });\n\n  // ===================\n  // Functionality\n  // ===================\n  it('change day when commanded to.', () => {\n    day.setDate(new Date());\n    const dayDate1 = moment(day.date).format(dayHeaderFormat);\n    day.setDate(moment().add(3, 'days'));\n    const dayDate2 = moment(day.date).format(dayHeaderFormat);\n    expect(dayDate1).not.toEqual(dayDate2);\n  });\n\n  xit('trigger title click event when the title is clicked.', () => {\n\n  });\n\n  xit('create events correctly', () => {\n\n  });\n  xit('update events correctly', () => {\n\n  });\n\n  xit('update all events on date change', () => {\n\n  });\n  xit('update all events without date change when requested', () => {\n\n  });\n\n  xit('clear all events when requested', () => {\n\n  });\n\n  xit('not change HTML if setEvents is called with the same events as last call.', () => {\n\n  });\n  xit('add new Event without deleting other ones that should stay.', () => {\n\n  });\n  xit('remove events that are not present in the new array of events configuration.', () => {\n\n  });\n});\n"],"file":"Day-specs.js","sourceRoot":"/source/"}